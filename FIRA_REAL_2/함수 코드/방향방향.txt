if(공x-로봇x > 0 && 공y-로봇y < 0) //1사분면
{
	if(로봇이 바라보고 잇는 각도 > 0 && 로봇이 바라보고 잇는 각도 <= 90)
	오른쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 90 && 로봇이 바라보고 잇는 각도 <= 180)
	ang = 180 - 로봇이 바라보고 잇는 각도 - 로봇과 공이 이루는 각도
		if(ang >= 0)
		오른쪽으로 회전
		else
		왼쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 180 && 로봇이 바라보고 잇는 각도 <= 270)
	왼쪽으로 회전
	else
	ang = 360 - 로봇이 바라보고 잇는 각도 - 로봇과 공이 이루고 잇는 각도
		if(ang >= 0)
		왼쪽으로 회전
		else
		오른쪽으로 회전
}
if(공x-로봇x < 0 && 공y-로봇y < 0) //2사분면
{
	if(로봇이 바라보고 잇는 각도 >= 0 && 로봇이 바라보고 잇는 각도 <= 90)
	ang = 로봇이 바라보고 잇는 각도 - 로봇과 공이 이루는 각도
		if(ang >= 0)
		왼쪽으로 회전
		else
		오른쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 90 && 로봇이 바라보고 잇는 각도 <= 180)
	왼쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 180 && 로봇이 바라보고 잇는 각도 <= 270)
	ang = 로봇이 바라보고 잇는 각도 - 180 - 로봇과 공이 이루고 잇는 각도
		if(ang >= 0)
		오른쪽으로 회전
		else
		왼쪽으로 회전
	else
	오른쪽으로 회전
}
if(공x-로봇x < 0 && 공y-로봇y > 0) //3사분면
{
	if(로봇이 바라보고 잇는 각도 >= 0 && 로봇이 바라보고 잇는 각도 <= 90)
	왼쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 90 && 로봇이 바라보고 잇는 각도 <= 180)
	ang = 로봇이 바라보고 잇는 각도 - 90 - 로봇과 공이 이루고 잇는 각도
		if(ang >= 0)
		왼쪽으로 회전
		else
		오른쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 180 && 로봇이 바라보고 잇는 각도 <= 270)
	오른쪽으로 회전
	else
	ang = 360 - 로봇이 바라보고 잇는 각도 - 로봇과 공이 이루고 잇는 각도
		if(ang >= 0)
		오른쪽으로 회전
		else
		왼쪽으로 회전
}
if(공x-로봇x > 0 && 공y-로봇y > 0) //4사분면
{
	if(로봇이 바라보고 잇는 각도 >= 0 && 로봇이 바라보고 잇는 각도 <= 90)
	ang = 로봇이 바라보고 잇는 각도 - 로봇이 공과 이루는 각도
		if(ang >= 0)
		오른으로 회전
		else
		왼쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 90 && 로봇이 바라보고 잇는 각도 <= 180)
	오른쪽으로 회전
	if(로봇이 바라보고 잇는 각도 > 180 && 로봇이 바라보고 잇는 각도 <= 270)
	ang = 로봇이 바라보고 잇는 각도 - 180 - 로봇이 공과 이루는 각도
		if(ang > 0)
		왼쪽으로 회전
		else
		오른쪽으로 회전
	else
	왼쪽으로 회전
}

int *R_Data[3][3] = { { &Robot_Info[0][0], &Robot_Info[0][1], &Robot_Info[0][2] }, { &Robot_Info[1][0], &Robot_Info[1][1], &Robot_Info[1][2] }, { &Robot_Info[2][0], &Robot_Info[2][1], &Robot_Info[2][2] } };
		int ang;
		if (Target_x - Robot_Info[num][0] > 0 && Target_y - Robot_Info[num][1] < 0) //1사분면
		{
			Ball_Ro_angle = atan2((double)(Robot_Info[num][1] - P_Ball_y), (double)(P_Ball_x - Robot_Info[num][0])) * 180 / 3.141592;
			if (Robot_Info[num][2] > 0 && Robot_Info[num][2] <= 90)
			{
				SendData(num, 12);
			}
			if (Robot_Info[num][2] > 90 && Robot_Info[num][2] <= 180)
			{
				ang = 180 - Robot_Info[num][2] - Ball_Ro_angle; //180 - 110 - 30 = 40
				if (ang + 5 >= 0)
				{
					SendData(num, 12);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 8);
				}
			}
			if (Robot_Info[num][2] > 180 && Robot_Info[num][2] <= 270)
			{
				SendData(num, 8);
			}
			else
			{
				ang = 360 - Robot_Info[num][2] - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 8);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 12);
				}
			}
		}
		if (Target_x - Robot_Info[num][0] < 0 && Target_y - Robot_Info[num][1] < 0) //2사분면
		{
			Ball_Ro_angle = atan2((double)(Robot_Info[num][1] - P_Ball_y), (double)(Robot_Info[num][0] - P_Ball_x)) * 180 / 3.141592;
			if (Robot_Info[num][2] > 0 && Robot_Info[num][2] <= 90)
			{
				ang = Robot_Info[num][2] - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 8);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 12);
				}
			}
			if (Robot_Info[num][2] > 90 && Robot_Info[num][2] <= 180)
			{
				SendData(num, 8);
			}
			if (Robot_Info[num][2] > 180 && Robot_Info[num][2] <= 270)
			{
				ang = Robot_Info[num][2] - 180 - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 12);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 8);
				}
			}
			else
			{
				SendData(num, 12);
			}
		}
		if (Target_x - Robot_Info[num][0] < 0 && Target_y - Robot_Info[num][1] > 0) //3사분면
		{
			Ball_Ro_angle = atan2((double)(P_Ball_y - Robot_Info[num][1]), (double)(Robot_Info[num][0] - P_Ball_x)) * 180 / 3.141592;
			if (Robot_Info[num][2] > 0 && Robot_Info[num][2] <= 90)
			{
				SendData(num, 8);
			}
			if (Robot_Info[num][2] > 90 && Robot_Info[num][2] <= 180)
			{
				ang = Robot_Info[num][2] - 90 - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 8);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 12);
				}
			}
			if (Robot_Info[num][2] > 180 && Robot_Info[num][2] <= 270)
			{
				SendData(num, 12);
			}
			else
			{
				ang = 360 - Robot_Info[num][2] - 90 - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 12);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 8);
				}
			}
		}
		if (Target_x - Robot_Info[num][0] > 0 && Target_y - Robot_Info[num][1] > 0) //4사분면
		{
			Ball_Ro_angle = atan2((double)(P_Ball_y - Robot_Info[num][1]), (double)(P_Ball_x - Robot_Info[num][0])) * 180 / 3.141592;
			if (Robot_Info[num][2] > 0 && Robot_Info[num][2] <= 90)
			{
				ang = Robot_Info[num][2] - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 12);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 8);
				}
			}
			if (Robot_Info[num][2] > 90 && Robot_Info[num][2] <= 180)
			{
				SendData(num, 12);
			}
			if (Robot_Info[num][2] > 180 && Robot_Info[num][2] <= 270)
			{
				ang = Robot_Info[num][2] - Ball_Ro_angle;
				if (ang + 5 >= 0)
				{
					SendData(num, 8);
				}
				else if (ang - 5 < 0)
				{
					SendData(num, 12);
				}
			}
			else
			{
				SendData(num, 8);
			}
		}